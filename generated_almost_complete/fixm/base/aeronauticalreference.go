// Code generated by xgen. DO NOT EDIT.

package base

// AerodromeNameType is The primary official name of an aerodrome as designated by an appropriate authority. [AIXM 5.1]
type AerodromeNameType string

// AtcUnitNameType is The name of the ATC center with authority over the corresponding Flight Information Region (FIR). [FIXM]
type AtcUnitNameType string

// DesignatedPointDesignatorType is The name of the designated point.
type DesignatedPointDesignatorType string

// IataAerodromeDesignatorType is The three letter coded location identifier of an aerodrome according to the IATA Resolution 763. [adapted from AIXM 5.1]
type IataAerodromeDesignatorType string

// LatLongPosType is A series of coordinates limited to two instances.  Latitude followed by longitude.
type LatLongPosType *LatLongPosListType

// LatLongPosListType is A series of coordinates.
type LatLongPosListType []float64

// LocationIndicatorType is A four-letter code group formulated in accordance with rules prescribed by ICAO and assigned to an aerodrome, a region or an ATS unit. [ICAO Doc 4444]
type LocationIndicatorType string

// LongitudeType is Longitude value expressed to a decimal precision.
type LongitudeType float64

// NavaidDesignatorType is A name of the Navaid.
type NavaidDesignatorType string

// Types of Navaid Services. [AIXM 5.1]
type NavaidServiceTypeType string

const (
	NavaidServiceTypeTypeDF NavaidServiceTypeType = "DF"		   // Direction Finder.
	NavaidServiceTypeTypeDME NavaidServiceTypeType = "DME"		   // Distance Measuring Equipment.
	NavaidServiceTypeTypeILS NavaidServiceTypeType = "ILS"		   // Instrument Landing System
	NavaidServiceTypeTypeILS_DME NavaidServiceTypeType = "ILS_DME" // ILS with collocated DME. Collocation can be with the antenna or the loc.
	NavaidServiceTypeTypeLOC NavaidServiceTypeType = "LOC"		   // Localizer
	NavaidServiceTypeTypeLOC_DME NavaidServiceTypeType = "LOC_DME" // Localizer and DME collocated
	NavaidServiceTypeTypeMKR NavaidServiceTypeType = "MKR" 		   // Marker Beacon
	NavaidServiceTypeTypeMLS NavaidServiceTypeType = "MLS"		   // Microwave Landing System
	NavaidServiceTypeTypeMLS_DME NavaidServiceTypeType = "MLS_DME" // MLS and DME collocated
	NavaidServiceTypeTypeNDB NavaidServiceTypeType = "NDB"		   // Non-Directional Radio Beacon
	NavaidServiceTypeTypeNDB_DME NavaidServiceTypeType = "NDB_DME" // NDB and DME collocated
	NavaidServiceTypeTypeNDB_MKR NavaidServiceTypeType = "NDB_MKR" // Non-Directional Radio Beacon and Marker Beacon
	NavaidServiceTypeTypeSDF NavaidServiceTypeType = "SDF"		   // Simplified Directional Facility
	NavaidServiceTypeTypeTACAN NavaidServiceTypeType = "TACAN" 	   // Tactical Air Navigation Beacon
	NavaidServiceTypeTypeTLS NavaidServiceTypeType = "TLS"		   // Transponder Landing System
	NavaidServiceTypeTypeVOR NavaidServiceTypeType = "VOR"		   // VHF Omni directional Radio Range.
	NavaidServiceTypeTypeVOR_DME NavaidServiceTypeType = "VOR_DME" //VOR and DME collocated
	NavaidServiceTypeTypeVORTAC NavaidServiceTypeType = "VORTAC"   // VOR and TACAN collocated.
)

// RestrictedAirspaceDesignatorType is Helper type for restrictions on AirspaceDesignator.
/* <xs:restriction base="fb:CharacterStringType">
			<xs:pattern value="([A-Z]|[0-9]|[, !&quot;&amp;#$%'\(\)\*\+\-\./:;&lt;=&gt;\?@\[\\\]\^_\|\{\}])*"/>
			<xs:minLength value="1"/>
			<xs:maxLength value="10"/>
		</xs:restriction> */
type RestrictedAirspaceDesignatorType CharacterStringType

// RestrictedRouteDesignatorType is Helper type for restrictions on RouteDesignator.
/* <xs:restriction base="fb:CharacterStringType">
			<xs:pattern value="[A-Z][A-Z0-9]{1,7}"/>
		</xs:restriction> */
type RestrictedRouteDesignatorType CharacterStringType

// RestrictedRunwayDirectionDesignatorType is Helper type for restrictions on RunwayDirectionDesignator.
/* <xs:restriction base="fb:CharacterStringType">
			<xs:pattern value="(0[1-9]|[12][0-9]|3[0-6])[LRC]{0,1}"/>
		</xs:restriction> */
type RestrictedRunwayDirectionDesignatorType CharacterStringType

// SidStarAbbreviatedDesignatorType is A shortened designator of the SID or STAR. [FIXM] This abbreviated designator is based on ARINC 424 chapter 7.4 rules.
/* <xs:restriction base="fb:CharacterStringType">
			<xs:pattern value="([A-Z]|[0-9])+([ \+\-/]*([A-Z]|[0-9])+)*"/>
			<xs:minLength value="1"/>
			<xs:maxLength value="6"/>
		</xs:restriction> */
type SidStarAbbreviatedDesignatorType CharacterStringType

// SidStarDesignatorType is The textual designator of a SID or STAR. [Specialised from AIXM 5.1]
/* <xs:restriction base="fb:CharacterStringType">
			<xs:pattern value="([A-Z]|[0-9])+([ \+\-/]*([A-Z]|[0-9])+)*"/>
			<xs:minLength value="1"/>
			<xs:maxLength value="7"/>
		</xs:restriction> */
type SidStarDesignatorType CharacterStringType

// AerodromeReferenceType is The location of an aerodrome expressed as a relative point.
// An aerodrome reference being either:
//		- the ICAO location indicator of the aerodrome, as listed in ICAO Doc 7910 (E.g. "KDFW")
//		- if no location indicator is available, the aerodrome name (E.g. "Dallas Fort Worth") or the identifier assigned to the aerodrome location in accordance with rules (resolution 767) governed by the International Air Transport Association. (E.g. "DFW")
// [FIXM]
type AerodromeReferenceType struct {
	// Provides an optional mechanism enabling FIXM aeronautical fields to be supplemented with references to AIXM features.  This field should be considered functionally equivalent to the xlink:href field used in AIXM to reference features. [FIXM]
	HrefAttr               string                             `xml:"href,attr,omitempty"`
	// An extension hook for attaching extension (non-core) classes.
	Extension              []*AerodromeReferenceExtensionType `xml:"extension"`
	// The three letter coded location identifier of an aerodrome according to the IATA Resolution 763. [adapted from AIXM 5.1]
	IataDesignator         string                             `xml:"iataDesignator"`
	// A four-letter code group formulated in accordance with rules prescribed by ICAO and assigned to the aerodrome. [Specialised from ICAO Annex 10] 
	// The list of ICAO location indicators is provided by ICAO Doc 7910. [FIXM]
	LocationIndicator      string                             `xml:"locationIndicator"`
	// The primary official name of an aerodrome as designated by an appropriate authority. [AIXM 5.1]
	Name                   string                             `xml:"name"`
	// The designated geographical location of an aerodrome. [ICAO]
	ReferencePoint         *GeographicalPositionType          `xml:"referencePoint"`
	// The location of an aerodrome expressed as a relative point.
	ReferenceRelativePoint *RelativePointType                 `xml:"referenceRelativePoint"`
}

// AirspaceDesignatorType is A published sequence of characters allowing the identification of the airspace. [AIXM 5.1]
type AirspaceDesignatorType struct {
	// Provides an optional mechanism enabling FIXM aeronautical fields to be supplemented with references to AIXM features.  This field should be considered functionally equivalent to the xlink:href field used in AIXM to reference features. [FIXM]
	HrefAttr string `xml:"href,attr,omitempty"`
	Value    string `xml:",chardata"`
}

// AtcUnitReferenceType is The geographical point of the Unit. [AIXM 5.1]
// A reference to an area control centre, approach control unit or aerodrome control tower being either:
//		- the ICAO location indicator of the atc unit, as listed in ICAO Doc 7910
//		- if no ICAO location indicator is available, the ATC unit name and optionally its geographical position. [FIXM]
type AtcUnitReferenceType struct {
	// Provides an optional mechanism enabling FIXM aeronautical fields to be supplemented with references to AIXM features.  This field should be considered functionally equivalent to the xlink:href field used in AIXM to reference features. [FIXM]
	HrefAttr                string                           `xml:"href,attr,omitempty"`
	// The full textual name of the ATC unit [adapted from AIXM 5.1] or an alternate identifier for the unit. [FIXM]
	AtcUnitNameOrAlternate  string                           `xml:"atcUnitNameOrAlternate"`
	// A published sequence of characters allowing the identification of a subdivision of a designated control area within which responsibility is assigned to one controller or to a small group of controllers.
	ControlSectorDesignator *AirspaceDesignatorType          `xml:"controlSectorDesignator"`
	// An extension hook for attaching extension (non-core) classes.
	Extension               []*AtcUnitReferenceExtensionType `xml:"extension"`
	// A four-letter code group formulated in accordance with rules prescribed by ICAO and assigned to the atc unit. [Specialised from ICAO Annex 10] The list of ICAO location indicators is provided by ICAO Doc 7910.
	LocationIndicator       string                           `xml:"locationIndicator"`
	// The geographical point of the Unit. [AIXM 5.1]
	Position                *GeographicalPositionType        `xml:"position"`
}

// DesignatedPointType is The values of latitude and longitude that define the position of the Designated Point on the surface of the Earth with respect to a reference datum. [specialised from ICAO Doc 9881]
// This optional field may be used to achieve unambiguous reference to the designated point.
// The combinations of fields that would make the reference unique are name + position.
// The coded designator of a designated point is not always sufficient for unambiguously referring to that feature: 
// The 5-letter coded designator of a waypoint is supposed to be unique world-wide (according to ICAO Annex 11), but in reality it is not. 
// The combinations of fields that would make the references unique are name + position.
// This FIXM class adds an optional properties 'position' which may be used as a complement to the 'name' information in order to remove any ambiguity on the coded designator.
type DesignatedPointType struct {
	// Provides an optional mechanism enabling FIXM aeronautical fields to be supplemented with references to AIXM features.  This field should be considered functionally equivalent to the xlink:href field used in AIXM to reference features. [FIXM]
	HrefAttr   string                          `xml:"href,attr,omitempty"`
	// The name of the designated point.
	Designator string                          `xml:"designator"`
	// An extension hook for attaching extension (non-core) classes.
	Extension  []*DesignatedPointExtensionType `xml:"extension"`
	// The values of latitude and longitude that define the position of the Designated Point on the surface of the Earth with respect to a reference datum. [specialised from ICAO Doc 9881]
	// This optional field may be used to achieve unambiguous reference to the designated point. 
	// The combinations of fields that would make the reference unique are name + position.
	Position   *GeographicalPositionType       `xml:"position"`
}

// GeographicalPositionType is This list of doubles contains the latitude and longitude of the location in order of LATITUDE FIRST, THEN LONGITUDE.
// An unnamed point designated only with a set of coordinates - latitude/longitude. [FIXM]
// Set of coordinates (latitude and longitude) referenced to the mathematical reference ellipsoid which define the position of a  point on the surface of the Earth. [ICAO Annex 15]
// The "srsName" attribute names the coordinate reference system (CRS) that defines the semantics of the lat/long pair according to the ISO6709 standard. FIXM uses only "urn:ogc:def:crs:EPSG::4326".
type GeographicalPositionType struct {
	// Names the coordinate reference system (CRS) that defines the semantics of the lat/long pair according to the ISO6709 standard. FIXM uses only "urn:ogc:def:crs:EPSG::4326".
	SrsNameAttr string                               `xml:"srsName,attr"`
	// An extension hook for attaching extension (non-core) classes.
	Extension   []*GeographicalPositionExtensionType `xml:"extension"`
	// This list of doubles contains the latitude and longitude of the location in order of LATITUDE FIRST, THEN LONGITUDE.
	Pos         *LatLongPosListType                  `xml:"pos"`
}

// NavaidType is The values of latitude and longitude that define the position of the Navaid on the surface of the Earth with respect to a reference datum. [specialised from ICAO Doc 9881]
//
// This optional field may be used to achieve unambiguous reference to the navaid.
// The combinations of fields that would make the reference unique are name + position + navaid service type.
// A radio navigation aid used in defining an ATS route, the flight path of an aircraft or for other navigation or ATS purposes. [FIXM]

// The coded designator of a navaid is not always sufficient for unambiguously referring to that feature: 
// The en-route navaids (VOR, DME, NDB) designator is supposed to be unique (according to ICAO Annex 11) within 600 NM. This means that these designators are not unique world-wide. For airport navaids, there is no limitation.
// The combinations of fields that would make the references unique are designator + position + navaid service type.
// This FIXM class adds two optional properties 'position' and 'navaidServiceType' which may be used as a complement to the 'designator' information in order to remove any ambiguity on the coded designator.
type NavaidType struct {
	HrefAttr          string                    `xml:"href,attr,omitempty"`
	// The name of the navaid.
	Designator        string                    `xml:"designator"`
	// An extension hook for attaching extension (non-core) classes.
	Extension         []*NavaidExtensionType    `xml:"extension"`
	// Type of the navaid service. [AIXM 5.1]
	// This optional field may be used as a complement of the designator in order to achieve unambiguous reference to the navaid. 
	// The combinations of fields that would make the reference unique are designator + position + navaid service type.
	NavaidServiceType string                    `xml:"navaidServiceType"`
	// The values of latitude and longitude that define the position of the Navaid on the surface of the Earth with respect to a reference datum. [specialised from ICAO Doc 9881]
	// This optional field may be used to achieve unambiguous reference to the navaid. 
	// The combinations of fields that would make the reference unique are name + position + navaid service type.
	Position          *GeographicalPositionType `xml:"position"`
}

// RelativePointType is The navaid used as reference for building an intersection
// Bearing and distance from a reference point. [ICAO Doc 4444, Appendix 2, ITEM 15]
// This FIXM class adds one optional property 'position' which may be used as a complement to the bearing, distance and reference point information in order to provide the computed position of the relative point, if available.
type RelativePointType struct {
	// The radius from a chosen Navaid
	Bearing        *BearingType                  `xml:"bearing"`
	// Distance from the chosen Navaid to the Intersection.
	Distance       *DistanceType                 `xml:"distance"`
	// An extension hook for attaching extension (non-core) classes.
	Extension      []*RelativePointExtensionType `xml:"extension"`
	// The values of latitude and longitude that define the position of the Relative Point on the surface of the Earth with respect to a reference datum. [specialised from ICAO Doc 9881]
	// This optional field may be used to provide the actual position of the relative point if already known / computed
	Position       *GeographicalPositionType     `xml:"position"`
	// The navaid used as reference for building an intersection
	ReferencePoint *NavaidType                   `xml:"referencePoint"`
}

// RouteDesignatorType is The coded designator for a published ATS route or route segment.
type RouteDesignatorType struct {
	HrefAttr string `xml:"href,attr,omitempty"`
	Value    string `xml:",chardata"`
}

// RunwayDirectionDesignatorType is - A number between 01 and 36
// - Optionally  Left (L), Center (C), or Right (R)
type RunwayDirectionDesignatorType struct {
	// Provides an optional mechanism enabling FIXM aeronautical fields to be supplemented with references to AIXM features.  This field should be considered functionally equivalent to the xlink:href field used in AIXM to reference features. [FIXM]
	HrefAttr string `xml:"href,attr,omitempty"`
	Value    string `xml:",chardata"`
}

// SidStarReferenceType is An extension hook for attaching extension (non-core) classes.
// A reference to a SID or a STAR. [FIXM]
type SidStarReferenceType struct {
	HrefAttr              string                           `xml:"href,attr,omitempty"`
	// Provides an optional mechanism enabling FIXM aeronautical fields to be supplemented with references to AIXM features.  This field should be considered functionally equivalent to the xlink:href field used in AIXM to reference features. [FIXM]
	AbbreviatedDesignator string                           `xml:"abbreviatedDesignator"`
	// The textual designator of a SID or STAR. [Specialised from AIXM 5.1]
	Designator            string                           `xml:"designator"`
	// An extension hook for attaching extension (non-core) classes.
	Extension             []*SidStarReferenceExtensionType `xml:"extension"`
}

// SignificantPointChoiceType is Bearing and distance from a reference point. [ICAO Doc 4444, Appendix 2, ITEM 15]
// A location type restricted to lat/long location, named location, or reference location.
type SignificantPointChoiceType struct {
	// The designated geographical location of an aerodrome. [ICAO Annex 14].
	AerodromeReferencePoint *AerodromeReferenceType   `xml:"aerodromeReferencePoint"`
	// A named geographical location used in defining an ATS route, the flight path of an aircraft or for other navigation or ATS purposes. [FIXM]
	DesignatedPoint         *DesignatedPointType      `xml:"designatedPoint"`
	// A radio navigation aid used in defining an ATS route, the flight path of an aircraft or for other navigation or ATS purposes. [FIXM]
	Navaid                  *NavaidType               `xml:"navaid"`
	// The values of latitude and longitude that define the position of a point on the surface of the Earth with respect to a reference datum. [specialised from ICAO Doc 9881]
	Position                *GeographicalPositionType `xml:"position"`
	// Bearing and distance from a reference point. [ICAO Doc 4444, Appendix 2, ITEM...
	RelativePoint           *RelativePointType        `xml:"relativePoint"`
}
